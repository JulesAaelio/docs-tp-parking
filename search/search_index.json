{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Introduction L'objectif de ce tp est de simuler le fonctionnement d'un capteur plac\u00e9 au niveau d'une place de parking. Dans le TP1 : On utilisera un capteur de distance pour d\u00e9terminer si la place est occup\u00e9e, puis un capteur de temp\u00e9rature pour d\u00e9t\u00e9cter une \u00e9ventuelle anomalie (surchauffe, d\u00e9part de feu ...). On transmettra ces informations au serveur via le protocole MQTT. Dans le TP2 : On utilisera un moteur servo, et un lecteur de badge RFID pour simuler une barri\u00e8re \u00e0 l'entr\u00e9e du parking.","title":"Introduction"},{"location":"#introduction","text":"L'objectif de ce tp est de simuler le fonctionnement d'un capteur plac\u00e9 au niveau d'une place de parking. Dans le TP1 : On utilisera un capteur de distance pour d\u00e9terminer si la place est occup\u00e9e, puis un capteur de temp\u00e9rature pour d\u00e9t\u00e9cter une \u00e9ventuelle anomalie (surchauffe, d\u00e9part de feu ...). On transmettra ces informations au serveur via le protocole MQTT. Dans le TP2 : On utilisera un moteur servo, et un lecteur de badge RFID pour simuler une barri\u00e8re \u00e0 l'entr\u00e9e du parking.","title":"Introduction"},{"location":"Getting_Started/1-ide/","text":"Installer Arduino IDE ATTENTION : Si vous n'avez pas de port USB standard sur votre ordinateur, pr\u00e9voyez vos adapatateurs. T\u00e9l\u00e9charger l'IDE Arduino : https://www.arduino.cc/en/software , pr\u00e9f\u00e9rez la version executable pour que tout les drivers n\u00e9c\u00e9ssaires soient install\u00e9s (en opposition \u00e0 la version du Windows Store ou au format .zip) Nous vous conseillons de configurer l'IDE en Anglais. Connectez la carte NodeMCU Amica V2 \u00e0 votre ordintateur. Suivre les instructions \u00e0 la page 17 de la documentation Si vous utilisez Linux, suivez les instructions d\u00e9crites ici : https://playground.arduino.cc/Linux/All/#Permission","title":"Installer Arduino IDE"},{"location":"Getting_Started/1-ide/#installer-arduino-ide","text":"ATTENTION : Si vous n'avez pas de port USB standard sur votre ordinateur, pr\u00e9voyez vos adapatateurs. T\u00e9l\u00e9charger l'IDE Arduino : https://www.arduino.cc/en/software , pr\u00e9f\u00e9rez la version executable pour que tout les drivers n\u00e9c\u00e9ssaires soient install\u00e9s (en opposition \u00e0 la version du Windows Store ou au format .zip) Nous vous conseillons de configurer l'IDE en Anglais. Connectez la carte NodeMCU Amica V2 \u00e0 votre ordintateur. Suivre les instructions \u00e0 la page 17 de la documentation Si vous utilisez Linux, suivez les instructions d\u00e9crites ici : https://playground.arduino.cc/Linux/All/#Permission","title":"Installer Arduino IDE"},{"location":"Getting_Started/2-tools/","text":"Ressources ESP8266 PIN Layout Le sch\u00e9ma suivant d\u00e9cris le mapping des ports de la carte \u00e0 microprocesseur: Utiliser le breadboard Attention sur la breaboard que nous utilisons, les power lines (+) et (-) sont interrompues au centre de la planche. Installer une librairie https://docs.arduino.cc/software/ide-v1/tutorials/installing-libraries","title":"Ressources"},{"location":"Getting_Started/2-tools/#ressources","text":"","title":"Ressources"},{"location":"Getting_Started/2-tools/#esp8266-pin-layout","text":"Le sch\u00e9ma suivant d\u00e9cris le mapping des ports de la carte \u00e0 microprocesseur:","title":"ESP8266 PIN Layout"},{"location":"Getting_Started/2-tools/#utiliser-le-breadboard","text":"Attention sur la breaboard que nous utilisons, les power lines (+) et (-) sont interrompues au centre de la planche.","title":"Utiliser le breadboard"},{"location":"Getting_Started/2-tools/#installer-une-librairie","text":"https://docs.arduino.cc/software/ide-v1/tutorials/installing-libraries","title":"Installer une librairie"},{"location":"TP1-Parking-spot/etape-1/","text":"Etape 1 : Faire clignoter les LEDS Objectifs Faire clignoter les deux leds (rouge et verte). Mat\u00e9riel n\u00e9c\u00e9ssaire Carte NodeMCU Lua Amica Module V2 Breaboard LED Rouge LED Verte 2 x Resistances 220 Sch\u00e9mas de branchement Extrait de code Allumer et \u00e9teindre une LED int LED = 13 ; void setup () { // Configurer le port LED en mode sortie. pinMode ( LED , OUTPUT ); } void loop () { // Envoyer du courant dans le port LED. digitalWrite ( LED , HIGH ); delay ( 500 ); // Ne plus envoyer de courant dans le port LED. digitalWrite ( LED , LOW ); delay ( 500 ); }","title":"Etape 1 : Faire clignoter les LEDS"},{"location":"TP1-Parking-spot/etape-1/#etape-1-faire-clignoter-les-leds","text":"","title":"Etape 1 : Faire clignoter les LEDS"},{"location":"TP1-Parking-spot/etape-1/#objectifs","text":"Faire clignoter les deux leds (rouge et verte).","title":"Objectifs"},{"location":"TP1-Parking-spot/etape-1/#materiel-necessaire","text":"Carte NodeMCU Lua Amica Module V2 Breaboard LED Rouge LED Verte 2 x Resistances 220","title":"Mat\u00e9riel n\u00e9c\u00e9ssaire"},{"location":"TP1-Parking-spot/etape-1/#schemas-de-branchement","text":"","title":"Sch\u00e9mas de branchement"},{"location":"TP1-Parking-spot/etape-1/#extrait-de-code","text":"","title":"Extrait de code"},{"location":"TP1-Parking-spot/etape-1/#allumer-et-eteindre-une-led","text":"int LED = 13 ; void setup () { // Configurer le port LED en mode sortie. pinMode ( LED , OUTPUT ); } void loop () { // Envoyer du courant dans le port LED. digitalWrite ( LED , HIGH ); delay ( 500 ); // Ne plus envoyer de courant dans le port LED. digitalWrite ( LED , LOW ); delay ( 500 ); }","title":"Allumer et \u00e9teindre une LED"},{"location":"TP1-Parking-spot/etape-2/","text":"Etape 2 : Ajouter le capteur de distance Objectifs Utiliser un capteur de distance pour d\u00e9terminer si la place de parking est occup\u00e9e ou non et changer l'\u00e9tat des LED en fonction. Lorsque la place est occup\u00e9e, on \u00e9clairera une LED de couleur rouge. Lorsque la place est libre, on \u00e9clairera une LED de couleur verte. Mat\u00e9riel n\u00e9c\u00e9ssaire Capteur de distance ultrason Branchements Ressources Fiche technique du capteur Extraits de code Lire la distance : int TRIG_PIN = 13 ; int ECHO_PIN = 15 ; void setup () { pinMode ( TRIG_PIN , OUTPUT ); pinMode ( ECHO_PIN , INPUT ); } float readDistanceCM () { digitalWrite ( TRIG_PIN , LOW ); delayMicroseconds ( 2 ); digitalWrite ( TRIG_PIN , HIGH ); delayMicroseconds ( 10 ); digitalWrite ( TRIG_PIN , LOW ); int duration = pulseIn ( ECHO_PIN , HIGH ); return duration * 0.034 / 2 ; }","title":"Etape 2 : Ajouter le capteur de distance"},{"location":"TP1-Parking-spot/etape-2/#etape-2-ajouter-le-capteur-de-distance","text":"","title":"Etape 2 : Ajouter le capteur de distance"},{"location":"TP1-Parking-spot/etape-2/#objectifs","text":"Utiliser un capteur de distance pour d\u00e9terminer si la place de parking est occup\u00e9e ou non et changer l'\u00e9tat des LED en fonction. Lorsque la place est occup\u00e9e, on \u00e9clairera une LED de couleur rouge. Lorsque la place est libre, on \u00e9clairera une LED de couleur verte.","title":"Objectifs"},{"location":"TP1-Parking-spot/etape-2/#materiel-necessaire","text":"Capteur de distance ultrason","title":"Mat\u00e9riel n\u00e9c\u00e9ssaire"},{"location":"TP1-Parking-spot/etape-2/#branchements","text":"","title":"Branchements"},{"location":"TP1-Parking-spot/etape-2/#ressources","text":"Fiche technique du capteur","title":"Ressources"},{"location":"TP1-Parking-spot/etape-2/#extraits-de-code","text":"Lire la distance : int TRIG_PIN = 13 ; int ECHO_PIN = 15 ; void setup () { pinMode ( TRIG_PIN , OUTPUT ); pinMode ( ECHO_PIN , INPUT ); } float readDistanceCM () { digitalWrite ( TRIG_PIN , LOW ); delayMicroseconds ( 2 ); digitalWrite ( TRIG_PIN , HIGH ); delayMicroseconds ( 10 ); digitalWrite ( TRIG_PIN , LOW ); int duration = pulseIn ( ECHO_PIN , HIGH ); return duration * 0.034 / 2 ; }","title":"Extraits de code"},{"location":"TP1-Parking-spot/etape-3/","text":"Etape 3 : Envoyer l'information au serveur Objectifs Se connecter au r\u00e9seau WiFi Envoyer le statut (occup\u00e9 / libre) au serveur. On enverra un entier binaire : occup\u00e9 = 1 libre = 0 Mat\u00e9riel n\u00e9c\u00e9ssaire N/A Branchements N/A Ressources Librairie PubSubClient Librairie ArduinoWifi Librairie ESP8266WifiExample Extrait de code Connexion \u00e0 un r\u00e9seau wifi et envoi d'un message mqtt https://github.com/knolleary/pubsubclient/blob/master/examples/mqtt_esp8266/mqtt_esp8266.ino Int\u00e9grer des donn\u00e9es dans une cha\u00eene de caract\u00e8res float data = 10.0 ; char message [ 100 ]; sprintf ( message , \"mydata=%f\" , data ); Pour envoyer l'information au serveur Pour envoyer l'information au serveur, on utilise le protocole MQTT On enverra toutes les informations sur le topic parking Adresse et port Adresse srv2.juleslaurent.fr Port 1883 Format des messages Le serveur s'attend \u00e0 recevoir des informations au format InfluxDB inline protocol Chaque message que vous enverez au serveur doit contenir le tag spot contenant votre num\u00e9ro de place. Le timestamp n'est pas obligatoire. Il sera automatiquement ajout\u00e9 par le serveur. Pour l'occupation de la place, le message doit contenir les \u00e9l\u00e9ments suivants : measurement = status fields : status (int) Exemple de message : temperature,spot=1 temperature=37.6 Troubleshooting Vous ne voyez pas vos informations s'afficher \u00e0 l'\u00e9cran ? Vous pouvez vous connecter au serveur MQTT en tant que subscriber pour v\u00e9rifier que les informations que vous envoyez sont correctement formatt\u00e9es / re\u00e7ues par le serveur. Installez Mosquitto Et lancez la commande suivante : mosquitto_sub -h srv2.juleslaurent.fr -t \"parking\" ou via docker docker run -it eclipse-mosquitto mosquitto_sub -h srv2.juleslaurent.fr -t \"parking\"","title":"Etape 3 : Envoyer l'information au serveur"},{"location":"TP1-Parking-spot/etape-3/#etape-3-envoyer-linformation-au-serveur","text":"","title":"Etape 3 : Envoyer l'information au serveur"},{"location":"TP1-Parking-spot/etape-3/#objectifs","text":"Se connecter au r\u00e9seau WiFi Envoyer le statut (occup\u00e9 / libre) au serveur. On enverra un entier binaire : occup\u00e9 = 1 libre = 0","title":"Objectifs"},{"location":"TP1-Parking-spot/etape-3/#materiel-necessaire","text":"N/A","title":"Mat\u00e9riel n\u00e9c\u00e9ssaire"},{"location":"TP1-Parking-spot/etape-3/#branchements","text":"N/A","title":"Branchements"},{"location":"TP1-Parking-spot/etape-3/#ressources","text":"Librairie PubSubClient Librairie ArduinoWifi Librairie ESP8266WifiExample","title":"Ressources"},{"location":"TP1-Parking-spot/etape-3/#extrait-de-code","text":"","title":"Extrait de code"},{"location":"TP1-Parking-spot/etape-3/#connexion-a-un-reseau-wifi-et-envoi-dun-message-mqtt","text":"https://github.com/knolleary/pubsubclient/blob/master/examples/mqtt_esp8266/mqtt_esp8266.ino","title":"Connexion \u00e0 un r\u00e9seau wifi et envoi d'un message mqtt"},{"location":"TP1-Parking-spot/etape-3/#integrer-des-donnees-dans-une-chaine-de-caracteres","text":"float data = 10.0 ; char message [ 100 ]; sprintf ( message , \"mydata=%f\" , data );","title":"Int\u00e9grer des donn\u00e9es dans une cha\u00eene de caract\u00e8res"},{"location":"TP1-Parking-spot/etape-3/#pour-envoyer-linformation-au-serveur","text":"Pour envoyer l'information au serveur, on utilise le protocole MQTT On enverra toutes les informations sur le topic parking","title":"Pour envoyer l'information au serveur"},{"location":"TP1-Parking-spot/etape-3/#adresse-et-port","text":"Adresse srv2.juleslaurent.fr Port 1883","title":"Adresse et port"},{"location":"TP1-Parking-spot/etape-3/#format-des-messages","text":"Le serveur s'attend \u00e0 recevoir des informations au format InfluxDB inline protocol Chaque message que vous enverez au serveur doit contenir le tag spot contenant votre num\u00e9ro de place. Le timestamp n'est pas obligatoire. Il sera automatiquement ajout\u00e9 par le serveur. Pour l'occupation de la place, le message doit contenir les \u00e9l\u00e9ments suivants : measurement = status fields : status (int) Exemple de message : temperature,spot=1 temperature=37.6","title":"Format des messages"},{"location":"TP1-Parking-spot/etape-3/#troubleshooting","text":"Vous ne voyez pas vos informations s'afficher \u00e0 l'\u00e9cran ? Vous pouvez vous connecter au serveur MQTT en tant que subscriber pour v\u00e9rifier que les informations que vous envoyez sont correctement formatt\u00e9es / re\u00e7ues par le serveur. Installez Mosquitto Et lancez la commande suivante : mosquitto_sub -h srv2.juleslaurent.fr -t \"parking\" ou via docker docker run -it eclipse-mosquitto mosquitto_sub -h srv2.juleslaurent.fr -t \"parking\"","title":"Troubleshooting"},{"location":"TP1-Parking-spot/etape-4/","text":"Etape 4 : Ajouter le capteur de temp\u00e9rature Objectifs Mesurer la temp\u00e9rature et envoyer l'information au serveur Mat\u00e9riel n\u00e9c\u00e9ssaire Capteur de temp\u00e9rature 18B20 pr\u00e9mont\u00e9 OU - Capteur de temp\u00e9rature DS18B20 + R\u00e9sistance 4.7K Branchements ATTENTION : Si le capteur est branch\u00e9 \u00e0 l'envers, il chauffe fortement. Si votre capteur devient chaud, d\u00e9branchez le fil reli\u00e9 au 3V3 et laissez le refroidir. Envoie de l'information au serveur Pour la temp\u00e9rature, le message doit contenir les \u00e9l\u00e9ments suivants : measurement = temperature fields : temperature (float) Ressources DS18B20 Datasheet Librairie DallasTemperature Librairie OneWire Extraits de code Lire la temperature https://github.com/milesburton/Arduino-Temperature-Control-Library/blob/master/examples/Simple/Simple.ino","title":"Etape 4 : Ajouter le capteur de temp\u00e9rature"},{"location":"TP1-Parking-spot/etape-4/#etape-4-ajouter-le-capteur-de-temperature","text":"","title":"Etape 4 : Ajouter le capteur de temp\u00e9rature"},{"location":"TP1-Parking-spot/etape-4/#objectifs","text":"Mesurer la temp\u00e9rature et envoyer l'information au serveur","title":"Objectifs"},{"location":"TP1-Parking-spot/etape-4/#materiel-necessaire","text":"Capteur de temp\u00e9rature 18B20 pr\u00e9mont\u00e9 OU - Capteur de temp\u00e9rature DS18B20 + R\u00e9sistance 4.7K","title":"Mat\u00e9riel n\u00e9c\u00e9ssaire"},{"location":"TP1-Parking-spot/etape-4/#branchements","text":"ATTENTION : Si le capteur est branch\u00e9 \u00e0 l'envers, il chauffe fortement. Si votre capteur devient chaud, d\u00e9branchez le fil reli\u00e9 au 3V3 et laissez le refroidir.","title":"Branchements"},{"location":"TP1-Parking-spot/etape-4/#envoie-de-linformation-au-serveur","text":"Pour la temp\u00e9rature, le message doit contenir les \u00e9l\u00e9ments suivants : measurement = temperature fields : temperature (float)","title":"Envoie de l'information au serveur"},{"location":"TP1-Parking-spot/etape-4/#ressources","text":"DS18B20 Datasheet Librairie DallasTemperature Librairie OneWire","title":"Ressources"},{"location":"TP1-Parking-spot/etape-4/#extraits-de-code","text":"","title":"Extraits de code"},{"location":"TP1-Parking-spot/etape-4/#lire-la-temperature","text":"https://github.com/milesburton/Arduino-Temperature-Control-Library/blob/master/examples/Simple/Simple.ino","title":"Lire la temperature"},{"location":"TP1-Parking-spot/etape-5/","text":"Etape 5 : Ajouter le buzzer Objectif Lorsque la temp\u00e9rature d\u00e9passe un seuil pr\u00e9d\u00e9fini : \u00e9mettre un son (alarme). Mat\u00e9riel n\u00e9c\u00e9ssaire Buzzer Sch\u00e9mas de branchement Pas de sch\u00e9ma fournis \u00e0 cette \u00e9tape. Ressources Passive Buzzer Datasheet Branchements Extraits de code Emettre un son \u00e0 une certaine fr\u00e9quence (uniquement pour les buzzer passifs) tone ( gpio , frequency );","title":"Etape 5 : Ajouter le buzzer"},{"location":"TP1-Parking-spot/etape-5/#etape-5-ajouter-le-buzzer","text":"","title":"Etape 5 : Ajouter le buzzer"},{"location":"TP1-Parking-spot/etape-5/#objectif","text":"Lorsque la temp\u00e9rature d\u00e9passe un seuil pr\u00e9d\u00e9fini : \u00e9mettre un son (alarme).","title":"Objectif"},{"location":"TP1-Parking-spot/etape-5/#materiel-necessaire","text":"Buzzer","title":"Mat\u00e9riel n\u00e9c\u00e9ssaire"},{"location":"TP1-Parking-spot/etape-5/#schemas-de-branchement","text":"Pas de sch\u00e9ma fournis \u00e0 cette \u00e9tape.","title":"Sch\u00e9mas de branchement"},{"location":"TP1-Parking-spot/etape-5/#ressources","text":"Passive Buzzer Datasheet","title":"Ressources"},{"location":"TP1-Parking-spot/etape-5/#branchements","text":"","title":"Branchements"},{"location":"TP1-Parking-spot/etape-5/#extraits-de-code","text":"Emettre un son \u00e0 une certaine fr\u00e9quence (uniquement pour les buzzer passifs) tone ( gpio , frequency );","title":"Extraits de code"},{"location":"TP2-Access-Control/etape-1/","text":"Etape 1 : Ouvrir et fermer la barri\u00e8re Objectifs Lorsque j'appuie sur le bouton, la barri\u00e8re s'ouvre. Apr\u00e8s un d\u00e9lai pr\u00e9d\u00e9finie, elle se referme. Mat\u00e9riel n\u00e9c\u00e9ssaire Carte NodeMCU Lua Amica Module V2 Moteur pas \u00e0 pas + h\u00e9lice. Bouton poussoir Ressources Librairie Servo Branchements Extraits de code Faire tourner le moteur Servo jusqu' \u00e0 un certain angle. #include <Servo.h> Servo myservo ; // create servo object to control a servo void setup () { myservo . attach ( 9 ); // attaches the servo on pin 9 to the servo object } void loop () { myservo . write ( 90 ); // tell servo to go to position 90\u00b0 }","title":"Etape 1 : Ouvrir et fermer la barri\u00e8re"},{"location":"TP2-Access-Control/etape-1/#etape-1-ouvrir-et-fermer-la-barriere","text":"","title":"Etape 1 : Ouvrir et fermer la barri\u00e8re"},{"location":"TP2-Access-Control/etape-1/#objectifs","text":"Lorsque j'appuie sur le bouton, la barri\u00e8re s'ouvre. Apr\u00e8s un d\u00e9lai pr\u00e9d\u00e9finie, elle se referme.","title":"Objectifs"},{"location":"TP2-Access-Control/etape-1/#materiel-necessaire","text":"Carte NodeMCU Lua Amica Module V2 Moteur pas \u00e0 pas + h\u00e9lice. Bouton poussoir","title":"Mat\u00e9riel n\u00e9c\u00e9ssaire"},{"location":"TP2-Access-Control/etape-1/#ressources","text":"Librairie Servo","title":"Ressources"},{"location":"TP2-Access-Control/etape-1/#branchements","text":"","title":"Branchements"},{"location":"TP2-Access-Control/etape-1/#extraits-de-code","text":"Faire tourner le moteur Servo jusqu' \u00e0 un certain angle. #include <Servo.h> Servo myservo ; // create servo object to control a servo void setup () { myservo . attach ( 9 ); // attaches the servo on pin 9 to the servo object } void loop () { myservo . write ( 90 ); // tell servo to go to position 90\u00b0 }","title":"Extraits de code"},{"location":"TP2-Access-Control/etape-2-/","text":"Etape 2 : Envoyer l'information au serveur Objectifs Envoyer une information au serveur \u00e0 chaque passage Envoie de l'information au serveur Pour l'entr\u00e9e : measurement = entrance fields : count (int) Pour la sortie : measurement = entrance fields : count (int)","title":"Etape 2 : Envoyer l'information au serveur"},{"location":"TP2-Access-Control/etape-2-/#etape-2-envoyer-linformation-au-serveur","text":"","title":"Etape 2 : Envoyer l'information au serveur"},{"location":"TP2-Access-Control/etape-2-/#objectifs","text":"Envoyer une information au serveur \u00e0 chaque passage","title":"Objectifs"},{"location":"TP2-Access-Control/etape-2-/#envoie-de-linformation-au-serveur","text":"Pour l'entr\u00e9e : measurement = entrance fields : count (int) Pour la sortie : measurement = entrance fields : count (int)","title":"Envoie de l'information au serveur"},{"location":"TP2-Access-Control/etape-3/","text":"Etape 3 : Ajouter un contr\u00f4le d'acc\u00e8s RFID Objectifs Lorsqu'un badge d'acc\u00e8s est pr\u00e9sent\u00e9. On affiche son UID. Mat\u00e9riel n\u00e9c\u00e9ssaire RC522 RFID Module Ressources documentaires RC522 RFID Guide Sch\u00e9ma de branchement TODO Extrait de code Afficher l'UID void printUid(MFRC522::Uid *uid) { Serial.print(F(\"Card UID:\")); for (byte i = 0; i < uid->size; i++) { if(uid->uidByte[i] < 0x10) Serial.print(F(\" 0\")); else Serial.print(F(\" \")); Serial.print(uid->uidByte[i], HEX); } Serial.println(); }","title":"Etape 3 : Ajouter un contr\u00f4le d'acc\u00e8s RFID"},{"location":"TP2-Access-Control/etape-3/#etape-3-ajouter-un-controle-dacces-rfid","text":"","title":"Etape 3 : Ajouter un contr\u00f4le d'acc\u00e8s RFID"},{"location":"TP2-Access-Control/etape-3/#objectifs","text":"Lorsqu'un badge d'acc\u00e8s est pr\u00e9sent\u00e9. On affiche son UID.","title":"Objectifs"},{"location":"TP2-Access-Control/etape-3/#materiel-necessaire","text":"RC522 RFID Module","title":"Mat\u00e9riel n\u00e9c\u00e9ssaire"},{"location":"TP2-Access-Control/etape-3/#ressources-documentaires","text":"RC522 RFID Guide","title":"Ressources documentaires"},{"location":"TP2-Access-Control/etape-3/#schema-de-branchement","text":"TODO","title":"Sch\u00e9ma de branchement"},{"location":"TP2-Access-Control/etape-3/#extrait-de-code","text":"","title":"Extrait de code"},{"location":"TP2-Access-Control/etape-3/#afficher-luid","text":"void printUid(MFRC522::Uid *uid) { Serial.print(F(\"Card UID:\")); for (byte i = 0; i < uid->size; i++) { if(uid->uidByte[i] < 0x10) Serial.print(F(\" 0\")); else Serial.print(F(\" \")); Serial.print(uid->uidByte[i], HEX); } Serial.println(); }","title":"Afficher l'UID"},{"location":"TP2-Access-Control/etape-4/","text":"Etape 4: Ajouter un contr\u00f4le d'acc\u00e8s RFID Objectifs Lorsqu'un badge d'acc\u00e8s autoris\u00e9 est pr\u00e9sent\u00e9 : on allume une LED verte, et on ouvre la barri\u00e8re. Lorsqu'un bage non autoris\u00e9 est pr\u00e9sent\u00e9 : on allume un LED rouge. Mat\u00e9riel n\u00e9c\u00e9ssaire RC522 RFID Module LED Rouge LED Verte Ressources documentaires RC522 RFID Guide Sch\u00e9ma de branchement TODO Extrait de code Comparer deux bytes array https://cplusplus.com/reference/cstring/memcmp/","title":"Etape 4:  Ajouter un contr\u00f4le d'acc\u00e8s RFID"},{"location":"TP2-Access-Control/etape-4/#etape-4-ajouter-un-controle-dacces-rfid","text":"","title":"Etape 4:  Ajouter un contr\u00f4le d'acc\u00e8s RFID"},{"location":"TP2-Access-Control/etape-4/#objectifs","text":"Lorsqu'un badge d'acc\u00e8s autoris\u00e9 est pr\u00e9sent\u00e9 : on allume une LED verte, et on ouvre la barri\u00e8re. Lorsqu'un bage non autoris\u00e9 est pr\u00e9sent\u00e9 : on allume un LED rouge.","title":"Objectifs"},{"location":"TP2-Access-Control/etape-4/#materiel-necessaire","text":"RC522 RFID Module LED Rouge LED Verte","title":"Mat\u00e9riel n\u00e9c\u00e9ssaire"},{"location":"TP2-Access-Control/etape-4/#ressources-documentaires","text":"RC522 RFID Guide","title":"Ressources documentaires"},{"location":"TP2-Access-Control/etape-4/#schema-de-branchement","text":"TODO","title":"Sch\u00e9ma de branchement"},{"location":"TP2-Access-Control/etape-4/#extrait-de-code","text":"","title":"Extrait de code"},{"location":"TP2-Access-Control/etape-4/#comparer-deux-bytes-array","text":"https://cplusplus.com/reference/cstring/memcmp/","title":"Comparer deux bytes array"}]}